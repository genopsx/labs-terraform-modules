version: 0.2

${env}

phases:
  install:
    commands:
      - echo "Parsing JSON environment variable containing destinations..."
      - export DESTINATIONS=$(echo $DESTINATIONS | jq -c '.[]')
      - export SOURCE_ECR_REPOSITORY_URL=$${AWS_ACCOUNT_ID}.dkr.ecr.$${AWS_REGION}.amazonaws.com
      - |
        for ROW in $DESTINATIONS; do
          REPO=$(echo $ROW | jq -r '.repository')
          TYPE=$(echo $ROW | jq -r '.type')
          if [ "$TYPE" == "artifactory" ]; then
            if [ -n "$ARTIFACTORY_USERNAME" ] && [ -n "$ARTIFACTORY_PRIVATE_KEY_BASE64" ] && [ -n "$ARTIFACTORY_CERTIFICATE_BASE64" ]; then
                echo "Setting up mutual TLS authentication for $${REPO}..."
                mkdir -p /etc/docker/certs.d/$${REPO}
                echo $ARTIFACTORY_PRIVATE_KEY_BASE64 | base64 --decode > /etc/docker/certs.d/$${REPO}/client.key
                echo $ARTIFACTORY_CERTIFICATE_BASE64 | base64 --decode > /etc/docker/certs.d/$${REPO}/client.cert
            fi
          fi
        done
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR repository $${SOURCE_ECR_REPOSITORY_URL}..."
      - aws ecr get-login-password --region $${AWS_REGION} | docker login --username AWS --password-stdin $${AWS_ACCOUNT_ID}.dkr.ecr.$${AWS_REGION}.amazonaws.com;
      - echo "Pulling source image $${SOURCE_ECR_REPOSITORY_NAME}:$${SOURCE_ECR_IMAGE_TAG}..."
      - docker pull $${AWS_ACCOUNT_ID}.dkr.ecr.$${AWS_REGION}.amazonaws.com/$${SOURCE_ECR_REPOSITORY_NAME}:$${SOURCE_ECR_IMAGE_TAG}
  build:
    commands:
      - |
        for ROW in $DESTINATIONS; do
          REPO=$(echo $ROW | jq -r '.repository')
          TAG=$(echo $ROW | jq -r '.tag')
          TYPE=$(echo $ROW | jq -r '.type')
          if [ "$TYPE" != "ecr" ]; then
            if [ "$TYPE" == "artifactory" ]; then
              DOCKER_USERNAME=$ARTIFACTORY_USERNAME
              DOCKER_PASSWORD=$ARTIFACTORY_API_KEY
              echo "Logging in to Artifactory Registry $${REPO}..."
            fi

            echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USERNAME --password-stdin $${REPO}
            echo "Tagging and pushing image to Docker Registry $${REPO}:$${TAG}..."
            docker tag $${AWS_ACCOUNT_ID}.dkr.ecr.$${AWS_REGION}.amazonaws.com/$${SOURCE_ECR_REPOSITORY_NAME}:$${SOURCE_ECR_IMAGE_TAG} $${REPO}:$${TAG}
            docker images
            echo "Pushing to $${REPO}:$${TAG}..."
            docker push $${REPO}:$${TAG}
          fi

          if [ "$TYPE" == "ecr" ]; then
            echo "Tagging and pushing image to Amazon ECR repository $${REPO}:$${TAG}..."
            docker tag $${AWS_ACCOUNT_ID}.dkr.ecr.$${AWS_REGION}.amazonaws.com/$${SOURCE_ECR_REPOSITORY_NAME}:$${SOURCE_ECR_IMAGE_TAG} $${AWS_ACCOUNT_ID}.dkr.ecr.$${AWS_REGION}.amazonaws.com/$${REPO}:$${TAG}
            docker push $${AWS_ACCOUNT_ID}.dkr.ecr.$${AWS_REGION}.amazonaws.com/$${REPO}:$${TAG}
          fi
        done
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Logging out of Amazon ECR...
      - docker logout $${AWS_ACCOUNT_ID}.dkr.ecr.$${AWS_REGION}.amazonaws.com
artifacts:
  files: []
  discard-paths: yes