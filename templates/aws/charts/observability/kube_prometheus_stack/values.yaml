prometheus:
  prometheusSpec:
    externalUrl: https://${prometheus_sub_release_name}.${domain}
  ingress:
    enabled: true
    ingressClassName: alb
    annotations:
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
      alb.ingress.kubernetes.io/ssl-redirect: "443"
      alb.ingress.kubernetes.io/group.name: ${prometheus_sub_release_name}
      alb.ingress.kubernetes.io/scheme: "internet-facing"
      alb.ingress.kubernetes.io/target-type: "ip"
      alb.ingress.kubernetes.io/group.order: '10'
      alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '10'
      alb.ingress.kubernetes.io/healthcheck-interval-seconds: '60'
      alb.ingress.kubernetes.io/healthy-threshold-count: '2'
      alb.ingress.kubernetes.io/unhealthy-threshold-count: '10'
      alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=60
      alb.ingress.kubernetes.io/success-codes: 200-399
      alb.ingress.kubernetes.io/certificate-arn: ${cert_arn}
      alb.ingress.kubernetes.io/healthcheck-path: /status
      alb.ingress.kubernetes.io/healthcheck-port: traffic-port
      alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
      external-dns.alpha.kubernetes.io/hostname: ${prometheus_sub_release_name}.${domain}
    hosts:
      - ${prometheus_sub_release_name}.${domain}
    paths:
      - /
    pathType: Prefix

alertmanager:
  ingress:
    enabled: true
    ingressClassName: alb
    annotations:
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
      alb.ingress.kubernetes.io/ssl-redirect: "443"
      alb.ingress.kubernetes.io/group.name: ${alertmanager_sub_release_name}
      alb.ingress.kubernetes.io/scheme: "internet-facing"
      alb.ingress.kubernetes.io/target-type: "ip"
      alb.ingress.kubernetes.io/group.order: '10'
      alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '10'
      alb.ingress.kubernetes.io/healthcheck-interval-seconds: '60'
      alb.ingress.kubernetes.io/healthy-threshold-count: '2'
      alb.ingress.kubernetes.io/unhealthy-threshold-count: '10'
      alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=60
      alb.ingress.kubernetes.io/success-codes: 200-399
      alb.ingress.kubernetes.io/certificate-arn: ${cert_arn}
      alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
      alb.ingress.kubernetes.io/healthcheck-path: /
      alb.ingress.kubernetes.io/healthcheck-port: traffic-port
      external-dns.alpha.kubernetes.io/hostname: ${alertmanager_sub_release_name}.${domain}
    hosts:
      - ${alertmanager_sub_release_name}.${domain}
    paths:
      - /
    pathType: Prefix
  extraArgs:
    - --web.external-url=https://${alertmanager_sub_release_name}.${domain}/

grafana:
  # adminUser: admin
  # adminPassword: prom-operator
  adminUser: ${grafana_admin_user}
  adminPassword: ${grafana_admin_password}
  ingress:
    enabled: true
    ingressClassName: alb
    annotations:
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
      alb.ingress.kubernetes.io/ssl-redirect: "443"
      alb.ingress.kubernetes.io/group.name: ${grafana_sub_release_name}
      alb.ingress.kubernetes.io/scheme: "internet-facing"
      alb.ingress.kubernetes.io/target-type: "ip"
      alb.ingress.kubernetes.io/group.order: '10'
      alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '10'
      alb.ingress.kubernetes.io/healthcheck-interval-seconds: '60'
      alb.ingress.kubernetes.io/healthy-threshold-count: '2'
      alb.ingress.kubernetes.io/unhealthy-threshold-count: '10'
      alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=60
      alb.ingress.kubernetes.io/success-codes: 200-399
      alb.ingress.kubernetes.io/certificate-arn: ${cert_arn}
      alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
      alb.ingress.kubernetes.io/healthcheck-path: /api/health
      alb.ingress.kubernetes.io/healthcheck-port: traffic-port
      external-dns.alpha.kubernetes.io/hostname: ${grafana_sub_release_name}.${domain}
    hosts:
      - ${grafana_sub_release_name}.${domain}
    path: /
    pathType: Prefix
