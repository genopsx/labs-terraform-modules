# -- Override the chart name used for all resources
nameOverride: ""

# -- Overwrite the fullname of all resources
fullnameOverride: ""

# -- Overwrite the namespace of all resources
namespaceOverride: ""

image:
  # -- (string) Image registry
  registry: ghcr.io
  # -- (string) Image repository
  repository: kyverno/policy-reporter
  # -- (string) Image pullPolicy
  pullPolicy: IfNotPresent
  # -- (string) Image tag
  tag: 3.0.0-rc.4

# -- Deployment replica count
replicaCount: 3

# -- Container port
port:
  name: http
  number: 8080

service:
  # -- Create Service
  enabled: true
  # -- Service type
  type: ClusterIP
  # -- Service port
  port: 8080
  # -- Service annotations
  annotations: {}
  # -- Service labels
  labels: {}

ingress:
  # -- Create Ingress
  # This ingress exposes the policy-reporter core app.
  enabled: true
  # -- Ingress className
  className: "alb"
  # -- Labels for the Ingress
  labels: {}
  # -- Annotations for the Ingress
  annotations:
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/group.name: "default-group"
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/target-type: "ip"
    alb.ingress.kubernetes.io/group.order: "150"
    alb.ingress.kubernetes.io/certificate-arn: ${cert_arn}
    external-dns.alpha.kubernetes.io/hostname: ${policy_reporter_release_name}.${domain}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host list
  hosts:
   - host: ${policy_reporter_release_name}.${domain}
     paths:
       - path: "/"
         pathType: Prefix
  #  - host: chart-example.local
  #    paths: []
  # -- Ingress tls list
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

existingTargetConfig:
  # -- Use an already existing configuration
  enabled: false
  # -- Name of the secret with the config
  name: ""
  # -- SubPath within the secret (defaults to config.yaml)
  subPath: ""

target:
  loki:
    # -- Host Address
    host: ""
    # -- Loki API, defaults to "/loki/api/v1/push"
    path: ""
    # -- Server Certificate file path
    # Can be added under extraVolumes
    certificate: ""
    # -- Skip TLS verification
    skipTLS: false
    # -- Read configuration from an already existing Secret
    secretRef: ""
    # -- Mounted secret path by Secrets Controller, secret should be in json format
    mountedSecret: ""
    # -- Minimum severity: "" < info < low < medium < high < critical
    minimumSeverity: ""
    # -- List of sources which should send
    sources: []
    # -- Skip already existing PolicyReportResults on startup
    skipExistingOnStartup: true
    # -- Added as additional labels
    customFields: {}
    # -- Additional HTTP Headers
    headers: {}
    # -- HTTP BasicAuth username
    username: ""
    # -- HTTP BasicAuth password
    password: ""
    # -- Filter Results which should send to this target
    # Wildcars for namespaces and policies are supported, you can either define exclude or include values
    # Filters are available for all targets except the UI
    filter: {}
#      namespaces:
#        include: ["develop"]
#      priorities:
#        exclude: ["debug", "info", "error"]
#      labels:
#        include: ["app", "owner:team-a", "monitoring:*"]
    # -- List of channels to route results to different configurations
    channels: []
#    - host: "http://loki.loki-stack:3100"
#      sources: []
#      customLabels: {}
#      filter:
#        namespaces:
#          include: ["develop"]
#        priorities:
#          exclude: ["debug", "info", "error"]
#        reportLabels:
# .         include: ["app", "owner:team-b"]

  slack:
    # -- Webhook Address
    webhook: ""
    # -- Slack Channel
    channel: ""
    # -- Read configuration from an already existing Secret
    secretRef: ""
    # -- Mounted secret path by Secrets Controller, secret should be in json format
    mountedSecret: ""
    # -- Minimum severity: "" < info < low < medium < high < critical
    minimumSeverity: ""
    # -- List of sources which should send
    sources: []
    # -- Skip already existing PolicyReportResults on startup
    skipExistingOnStartup: true
    # -- Added as additional labels
    customFields: {}
    # -- Filter Results which should send to this target
    # Wildcars for namespaces and policies are supported, you can either define exclude or include values
    # Filters are available for all targets except the UI
    filter: {}
    # -- List of channels to route results to different configurations
    channels: []
#    - webhook: "https://slack.webhook1"
#      channel: ""
#      filter:
#        namespaces:
#          include: ["develop"]
#        priorities:
#          exclude: ["debug", "info", "error"]
#        policies:
#          include: ["require-run-as-nonroot"]
#        reportLabels:
# .         include: ["app", "owner:team-b"]
#    - webhook: "https://slack.webhook2"
#      minimumSeverity: "warning"
#      filter:
#        namespaces:
#          include: ["team-a-*"]
  webhook:
    # -- Webhook Address
    webhook: ""
    # -- Server Certificate file path
    # Can be added under extraVolumes
    certificate: ""
    # -- Skip TLS verification
    skipTLS: false
    # -- Additional HTTP Headers
    headers: {}
    # -- Read configuration from an already existing Secret
    secretRef: ""
    # -- Mounted secret path by Secrets Controller, secret should be in json format
    mountedSecret: ""
    # -- Minimum severity: "" < info < low < medium < high < critical
    minimumSeverity: ""
    # -- List of sources which should send
    sources: []
    # -- Skip already existing PolicyReportResults on startup
    skipExistingOnStartup: true
    # -- Added as additional labels
    customFields: {}
    # -- Filter Results which should send to this target
    # Wildcars for namespaces and policies are supported, you can either define exclude or include values
    # Filters are available for all targets except the UI
    filter: {}
    # -- List of channels to route results to different configurations
    channels: []

ui:
  # -- (bool) Enable Policy Reporter UI
  enabled: true
  image:
    # -- (string) Image registry
    registry: ghcr.io
    # -- (string) Image repository
    repository: kyverno/policy-reporter-ui
    # -- (string) Image PullPolicy
    pullPolicy: IfNotPresent
    # -- (string) Image tag
    tag: "2.0.0-rc.3"

  # -- Deployment replica count
  replicaCount: 1

  # -- Temporary Directory to persist session data for authentication
  tempDir: "/tmp"

  logging:
    # -- Enables external api request logging
    api: false
    # -- Enables server access logging
    server: false
    # -- Log encoding
    # possible encodings are console and json
    encoding: console
    # -- Log level
    # default info
    logLevel: 0

  server:
    # -- Application port
    port: 8080
    # -- Enabled CORS header
    cors: true
    # -- Overwrites Request Host with Proxy Host and adds `X-Forwarded-Host` and `X-Origin-Host` headers
    overwriteHost: true

  openIDConnect:
    # -- Enable openID Connect authentication
    enabled: false
    # -- OpenID Connect Discovery URL
    discoveryUrl: ""
    # -- OpenID Connect Callback URL
    callbackUrl: ""
    # -- OpenID Connect ClientID
    clientId: ""
    # -- OpenID Connect ClientSecret
    clientSecret: ""
    # -- Optional Group Claim to map user groups to the profile
    # groups can be used to define access control for clusters, boards and custom boards.
    groupClaim: ""
    # -- OpenID Connect allowed Scopes
    scopes: []
    # -- Provide OpenID Connect configuration via Secret
    # supported keys: `discoveryUrl`, `clientId`, `clientSecret`
    secretRef: ""

  oauth:
    # -- Enable openID Connect authentication
    enabled: false
    # -- OAuth2 Provider
    # supported: amazon, gitlab, github, apple, google, yandex, azuread
    provider: ""
    # -- OpenID Connect Callback URL
    callbackUrl: ""
    # -- OpenID Connect ClientID
    clientId: ""
    # -- OpenID Connect ClientSecret
    clientSecret: ""
    # -- OpenID Connect allowed Scopes
    scopes: []
    # -- Provide OpenID Connect configuration via Secret
    # supported keys: `provider`, `clientId`, `clientSecret`
    secretRef: ""

  # -- optional banner text
  banner: ""

  # -- DisplayMode dark/light/colorblind/colorblinddark
  # uses the OS configured prefered color scheme as default
  displayMode: ""

  # -- Additional customizable dashboards
  customBoards: []
  # - name: Team A
  #   namespaces:
  #     # -- list of displayed namespaces
  #     list: []
  #     # -- selector for displayed namespaces
  #     selector:
  #       team: team-a
  #   sources:
  #     # -- list of displayed sources
  #     list: []
  #   clusterScope:
  #     # -- disply cluster scoped resources and results
  #     enabled: false

  # -- source specific configurations
  sources: []
  # -- kyverno specific UI confiurations
  # - name: kyverno
  # -- show results per category, other option: severity
  #  chartType: result
  # -- enabled action button to generate PolicyExceptions from the UI
  #  exceptions: false
  # -- exclude results or (cluster)kinds per source
  #  excludes:
  #    results:
  #    - warn
  #    - error

  ## -- Default Cluster name
  name: Default

  # -- Connected Policy Reporter APIs
  clusters: []
  # - name: default
  #   host: http://policy-reporter:8080
  #   secretRef: ""
  #   skipTLS: false
  #   certificate: ""
  #   plugins:
  #   - name: kyverno
  #     host: http://policy-reporter-kyverno-plugin:8080

  # -- Image pull secrets for image verification policies, this will define the `--imagePullSecrets` argument
  imagePullSecrets: []
    # regcred:
    #   registry: foo.example.com
    #   username: foobar
    #   password: secret

  serviceAccount:
    # -- Create ServiceAccount
    create: true
    # -- Enable ServiceAccount automaount
    automount: true
    # -- Annotations for the ServiceAccount
    annotations: {}
    # -- The ServiceAccount name
    name: ""

  # -- list of extra manifests
  extraManifests: []

  # -- Add sidecar containers to the UI deployment
  #  sidecarContainers:
  #    oauth-proxy:
  #      image: quay.io/oauth2-proxy/oauth2-proxy:v7.6.0
  #      args:
  #      - --upstream=http://127.0.0.1:8080
  #      - --http-address=0.0.0.0:8081
  #      - ...
  #      ports:
  #      - containerPort: 8081
  #        name: oauth-proxy
  #        protocol: TCP
  #      resources: {}
  sidecarContainers: {}

  # -- Additional annotations to add to each pod
  podAnnotations: {}

  # -- Additional labels to add to each pod
  podLabels: {}

  # -- Deployment update strategy.
  # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  updateStrategy: {}
  #  rollingUpdate:
  #    maxSurge: 1
  #    maxUnavailable: 40%
  #  type: RollingUpdate

  # -- The number of revisions to keep
  revisionHistoryLimit: 10

  # -- Security context for the pod
  podSecurityContext:
    runAsUser: 1234
    runAsGroup: 1234

  # -- Allow additional env variables to be added
  envVars: []

  rbac:
    # -- Create RBAC resources
    enabled: true

  securityContext:
    runAsUser: 1234
    runAsNonRoot: true
    privileged: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
    seccompProfile:
      type: RuntimeDefault

  service:
    # -- Service type.
    type: ClusterIP
    # -- Service port.
    port: 8080
    # -- Service annotations.
    annotations: {}
    # -- Service labels.
    labels: {}
    # -- Additional service ports for e.g. Sidecars  # - name: authenticated
    # additionalPorts:
    # - name: authenticated
    #   port: 8081
    #   targetPort: 8081
    additionalPorts: []

  ingress:
    # -- Create ingress resource.
    enabled: false
    # -- Redirect ingress to an additional defined port on the service
    port: null
    # -- Ingress class name.
    className: ""
    # -- Ingress labels.
    labels: {}
    # -- Ingress annotations.
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    # -- List of ingress host configurations.
    hosts: []
    #  - host: chart-example.local
    #    paths:
    #      - path: /
    #        pathType: ImplementationSpecific
    # -- List of ingress TLS configurations.
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  networkPolicy:
    # -- When true, use a NetworkPolicy to allow ingress to the webhook
    # This is useful on clusters using Calico and/or native k8s network policies in a default-deny setup.
    enabled: false
    # -- A list of valid from selectors according to https://kubernetes.io/docs/concepts/services-networking/network-policies.
    # Enables Kubernetes API Server by default
    egress:
    - ports:
      - protocol: TCP
        port: 6443
    # -- A list of valid from selectors according to https://kubernetes.io/docs/concepts/services-networking/network-policies.
    ingress: []

  # -- Resource constraints
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # enabled if replicaCount > 1
  podDisruptionBudget:
    # -- Configures the minimum available pods for kyvernoPlugin disruptions.
    # Cannot be used if `maxUnavailable` is set.
    minAvailable: 1
    # -- Configures the maximum unavailable pods for kyvernoPlugin disruptions.
    # Cannot be used if `minAvailable` is set.
    maxUnavailable:

  # -- Node labels for pod assignment
  nodeSelector: {}

  # -- List of node taints to tolerate
  tolerations: []

    # -- Affinity constraints.
  affinity: {}

plugin:
  kyverno:
    # -- (bool) Enable Kyverno Plugin
    enabled: true
    image:
      # -- (string) Image registry
      registry: ghcr.io
      # -- (string) Image repository
      repository: kyverno/policy-reporter/kyverno-plugin
      # -- (string) Image PullPolicy
      pullPolicy: IfNotPresent
      # -- (string) Image tag
      tag: "0.4.0"

    # -- Deployment replica count
    replicaCount: 2

    logging:
      # -- Enables external API request logging
      api: false
      # -- Enables Server access logging
      server: false
      # -- log encoding
      # possible encodings are console and json
      encoding: console
      # -- log level
      # default info
      logLevel: 0

    server:
      # -- Application port
      port: 8080

    blockReports:
      # -- Enables he BlockReport feature
      enabled: false
      # -- Watches for Kyverno Events in the configured namespace
      # leave blank to watch in all namespaces
      eventNamespace: default
      # -- Used value for the source field in the created (Cluster)PolicyReports
      source: Kyverno Event
      results:
        # -- Max items per PolicyReport resource
        maxPerReport: 200
        # -- Keep only the latest of duplicated events
        keepOnlyLatest: false
      policyReport:
        # -- Labels for all created (Cluster)PolicyReports
        labels: []
        # -- Annotations for all created (Cluster)PolicyReports
        annotations: []

    # -- Image pull secrets for image verification policies, this will define the `--imagePullSecrets` argument
    imagePullSecrets: []
      # regcred:
      #   registry: foo.example.com
      #   username: foobar
      #   password: secret

    serviceAccount:
      # -- Create ServiceAccount
      create: true
      # -- Enable ServiceAccount automaount
      automount: true
      # -- Annotations for the ServiceAccount
      annotations: {}
      # -- The ServiceAccount name
      name: ""

    # -- Additional annotations to add to each pod
    podAnnotations: {}

    # -- Additional labels to add to each pod
    podLabels: {}

    # -- Deployment update strategy.
    # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    updateStrategy: {}
    #  rollingUpdate:
    #    maxSurge: 1
    #    maxUnavailable: 40%
    #  type: RollingUpdate

    # -- The number of revisions to keep
    revisionHistoryLimit: 10

    # -- Security context for the pod
    podSecurityContext:
      runAsUser: 1234
      runAsGroup: 1234

    # -- Allow additional env variables to be added
    envVars: []

    rbac:
      # -- Create RBAC resources
      enabled: true

    securityContext:
      runAsUser: 1234
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault

    service:
      # -- Service type.
      type: ClusterIP
      # -- Service port.
      port: 8080
      # -- Service annotations.
      annotations: {}
      # -- Service labels.
      labels: {}

    ingress:
      # -- Create ingress resource.
      enabled: false
      # -- Ingress class name.
      className: ""
      # -- Ingress labels.
      labels: {}
      # -- Ingress annotations.
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      # -- List of ingress host configurations.
      hosts: []
      #  - host: chart-example.local
      #    paths:
      #      - path: /
      #        pathType: ImplementationSpecific
      # -- List of ingress TLS configurations.
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

    networkPolicy:
      # -- When true, use a NetworkPolicy to allow ingress to the webhook
      # This is useful on clusters using Calico and/or native k8s network policies in a default-deny setup.
      enabled: false
      # -- A list of valid from selectors according to https://kubernetes.io/docs/concepts/services-networking/network-policies.
      # Enables Kubernetes API Server by default
      egress:
      - ports:
        - protocol: TCP
          port: 6443
      # -- A list of valid from selectors according to https://kubernetes.io/docs/concepts/services-networking/network-policies.
      ingress: []

    # -- Resource constraints
    resources: {}
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    # required for HA mode
    # if "blockReports" is disabled, leaderElection is also disabled automatically
    # will be enabled when replicaCount > 1
    leaderElection:
      # -- Lock Name
      lockName: kyverno-plugin
      # -- Released lock when the run context is cancelled.
      releaseOnCancel: true
      # -- LeaseDuration is the duration that non-leader candidates will wait to force acquire leadership.
      leaseDuration: 15
      # -- RenewDeadline is the duration that the acting master will retry refreshing leadership before giving up.
      renewDeadline: 10
      # -- RetryPeriod is the duration the LeaderElector clients should wait between tries of actions.
      retryPeriod: 2

    # enabled if replicaCount > 1
    podDisruptionBudget:
      # -- Configures the minimum available pods for kyvernoPlugin disruptions.
      # Cannot be used if `maxUnavailable` is set.
      minAvailable: 1
      # -- Configures the maximum unavailable pods for kyvernoPlugin disruptions.
      # Cannot be used if `minAvailable` is set.
      maxUnavailable:

    # -- Node labels for pod assignment
    nodeSelector: {}

    # -- List of node taints to tolerate
    tolerations: []

      # -- Affinity constraints.
    affinity: {}
